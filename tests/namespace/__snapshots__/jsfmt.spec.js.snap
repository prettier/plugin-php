// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`namespace.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
namespace Base\\Test\\To\\Extend;

use Other\\Test\\Import;
use One\\More\\Test;

=====================================output=====================================
<?php
namespace Base\\Test\\To\\Extend;

use Other\\Test\\Import;
use One\\More\\Test;

================================================================================
`;

exports[`namespace-newline-after.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace Foo;

use Other\\Test\\Import;

=====================================output=====================================
<?php

namespace Foo;

use Other\\Test\\Import;

================================================================================
`;

exports[`namespace-newline-before.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace Foo;

=====================================output=====================================
<?php

namespace Foo;

================================================================================
`;

exports[`namespace-next-call.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace Foo;

call();

=====================================output=====================================
<?php

namespace Foo;

call();

================================================================================
`;

exports[`namespace-no-newline-after.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace Foo;
use Other\\Test\\Import;

=====================================output=====================================
<?php

namespace Foo;
use Other\\Test\\Import;

================================================================================
`;

exports[`namespace-no-newline-before.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
namespace Foo;

=====================================output=====================================
<?php
namespace Foo;

================================================================================
`;

exports[`namespace-resolution.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace A;

use B\\D, C\\E as F;

// Unqualified name (uqn)
$obj = new Bar();

// Fully qualified name (fqn)
$obj = new \\Bar();
$obj = new \\Foo\\Bar();

// Qualified name (qn)
$obj = new Foo\\Bar();

// Relative name (rn)
$obj = new namespace\\Another;
$obj = new namespace\\Another\\Test;
$obj = new namespace\\Another\\Test;

foo();

\\foo();

my\\foo();

F();

new F();

new \\F();

B\\foo();

B::foo();

D::foo();

\\B\\foo();

\\B::foo();

A\\B::foo();

\\A\\B::foo();

$foo = namespace\\foo();

=====================================output=====================================
<?php

namespace A;

use B\\D, C\\E as F;

// Unqualified name (uqn)
$obj = new Bar();

// Fully qualified name (fqn)
$obj = new \\Bar();
$obj = new \\Foo\\Bar();

// Qualified name (qn)
$obj = new Foo\\Bar();

// Relative name (rn)
$obj = new namespace\\Another();
$obj = new namespace\\Another\\Test();
$obj = new namespace\\Another\\Test();

foo();

\\foo();

my\\foo();

F();

new F();

new \\F();

B\\foo();

B::foo();

D::foo();

\\B\\foo();

\\B::foo();

A\\B::foo();

\\A\\B::foo();

$foo = namespace\\foo();

================================================================================
`;

exports[`nested.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

namespace foo {
    function bar($a, $b) {
        return $a + $b;
    }
    echo bar(2, 3);
}

namespace Name\\Space {
    const FOO = 42;
    function f() { echo __FUNCTION__."\\n"; }
}

=====================================output=====================================
<?php

namespace foo {
    function bar($a, $b)
    {
        return $a + $b;
    }
    echo bar(2, 3);
}

namespace Name\\Space {
    const FOO = 42;
    function f()
    {
        echo __FUNCTION__ . "\\n";
    }
}

================================================================================
`;

exports[`nested-1.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

$var = 1;
namespace foo {
    function bar($a, $b) {
        return $a + $b;
    }
    echo bar(2, 3);
}
$var = 1;

=====================================output=====================================
<?php

$var = 1;
namespace foo {
    function bar($a, $b)
    {
        return $a + $b;
    }
    echo bar(2, 3);
}
$var = 1;

================================================================================
`;

exports[`single.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
namespace Foo;

=====================================output=====================================
<?php
namespace Foo;

================================================================================
`;

exports[`without-name.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
namespace {}

=====================================output=====================================
<?php
namespace {
}

================================================================================
`;
