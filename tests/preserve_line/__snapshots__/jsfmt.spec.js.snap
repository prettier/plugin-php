// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`argument-list.php - php-verify: argument-list.php 1`] = `
<?php

longArgNamesWithComments(

  // Hello World

  $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong1,

  // Hello World

  $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong2,

  /* Hello World */
  $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong3


);

shortArgNames(


  $short,

  $short2,
  $short3
);

comments(

  // Comment

  /* Some comments */
  $short,
  /* Another comment */


  $short2, // Even more comments


  /* Another comment */


  // Long Long Long Long Long Comment



  /* Long Long Long Long Long Comment */
  // Long Long Long Long Long Comment

  $short3
  // More comments


);

differentArgTypes(

  function () {
    return true;
  },

  isTrue ?
    doSomething() : 12

);

moreArgTypes(

  [1, 2,
    3],

  [
    'name' => 'Hello World',
    'age' => 29
  ],

  doSomething(

    // Hello world


    // Hello world again
    [ 'name' => 'Hello World', 'age' => 34 ],


    $oneThing
      + $anotherThing

    // Comment

  )

);

evenMoreArgTypes(
  doSomething(
    [ 'name' => 'Hello World', 'age' => 34 ],


    true

  ),

  14,

  1 + 2
    - 90/80,

  !98 *
    60 -
    90



);

$foo->apply(null,

// Array here
[1, 2]);


$bar->on("readable",

function () {
  doStuff();
});

foo(['A, B'],

/* function here */
function () { return true; });

$doSomething->apply(null,

// Comment

[
  'Hello world 1',
  'Hello world 2',
  'Hello world 3',
]);


doAnotherThing("node",

[
  $solution_type,
  $time_frame
]);

$stuff->doThing($someStuff,

  -1, [
  'accept' => function($node) { doSomething($node); }
]);

doThing(

  $someOtherStuff,

  // This is important
  true, [
  'decline' => function ($creditCard) { takeMoney($creditCard); }
]

);

func(
  function () {
   thing();
  },

  [ 'yes' => true, 'no' => 5 ]
);

doSomething(

   [ 'tomorrow' => $maybe, 'today' => $never[$always] ],

   1337,

   /* Comment */

   // This is important
   [ $helloWorld, $someImportantStuff ]


);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

longArgNamesWithComments(
    // Hello World

    $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong1,

    // Hello World

    $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong2,

    /* Hello World */
    $longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong3
);

shortArgNames(
    $short,

    $short2,
    $short3
);

comments(
    // Comment

    /* Some comments */
    $short,
    /* Another comment */

    $short2, // Even more comments

    /* Another comment */

    // Long Long Long Long Long Comment

    /* Long Long Long Long Long Comment */
    // Long Long Long Long Long Comment

    $short3
    // More comments
);

differentArgTypes(
    function () {
        return true;
    },

    isTrue ? doSomething() : 12
);

moreArgTypes(
    [1, 2, 3],

    [
        'name' => 'Hello World',
        'age' => 29
    ],

    doSomething(
        // Hello world

        // Hello world again
        ['name' => 'Hello World', 'age' => 34],

        $oneThing + $anotherThing

        // Comment
    )
);

evenMoreArgTypes(
    doSomething(
        ['name' => 'Hello World', 'age' => 34],

        true
    ),

    14,

    1 + 2 - 90 / 80,

    !98 * 60 - 90
);

$foo->apply(
    null,

    // Array here
    [1, 2]
);

$bar->on(
    "readable",

    function () {
        doStuff();
    }
);

foo(
    ['A, B'],

    /* function here */
    function () {
        return true;
    }
);

$doSomething->apply(
    null,

    // Comment

    ['Hello world 1', 'Hello world 2', 'Hello world 3']
);

doAnotherThing(
    "node",

    [$solution_type, $time_frame]
);

$stuff->doThing(
    $someStuff,

    -1,
    [
        'accept' => function ($node) {
            doSomething($node);
        }
    ]
);

doThing(
    $someOtherStuff,

    // This is important
    true,
    [
        'decline' => function ($creditCard) {
            takeMoney($creditCard);
        }
    ]
);

func(
    function () {
        thing();
    },

    ['yes' => true, 'no' => 5]
);

doSomething(
    ['tomorrow' => $maybe, 'today' => $never[$always]],

    1337,

    /* Comment */

    // This is important
    [$helloWorld, $someImportantStuff]
);

`;

exports[`comments.php - php-verify: comments.php 1`] = `
<?php

function a() {
  $a = 5; // comment

  return $a;
}

function a() {
  $a = 5; /* comment */

  return $a;
}

function a() {
  $a = 5; /* comment */ /* comment */

  return $a;
}

function a() {
  $a = 5; /* comment */ /* comment */ // comment
  return $a;
}

function a() {
  $a = 5; /* comment */ /* comment */ // comment

  return $a;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

function a()
{
    $a = 5; // comment

    return $a;
}

function a()
{
    $a = 5; /* comment */

    return $a;
}

function a()
{
    $a = 5; /* comment */ /* comment */

    return $a;
}

function a()
{
    $a = 5; /* comment */ /* comment */ // comment
    return $a;
}

function a()
{
    $a = 5; /* comment */ /* comment */ // comment

    return $a;
}

`;

exports[`member-chain.php - php-verify: member-chain.php 1`] = `
<?php

$fooBar->doSomething('Hello World')->doAnotherThing('Foo', [ 'foo' => $bar ])

  // App configuration.
  ->doOneMoreThing($config)

  ->run(function () { $console->log('Bar'); });

$bigDeal

  ->doSomething('Hello World')

  // Hello world
  ->doAnotherThing('Foo', [ 'foo' => $bar ])

  // App configuration.
  ->doOneMoreThing($config)

  ->run(function () { $console->log('Bar'); });


$foo->bar->baz

  ->doSomething('Hello World')

  // Hello world
  ->foo->bar->doAnotherThing('Foo', [ 'foo' => $bar ])

  ->doOneMoreThing($config)
  ->bar->run(function () { $console->log('Bar'); });

(
  $somethingGood ? $thisIsIt : $maybeNot
)

  // Hello world
  ->doSomething('Hello World')

  ->doAnotherThing('Foo', [ 'foo' => $bar ]) // Run this
  ->run(function () { $console->log('Bar'); }); // Do this

$helloWorld

  ->text()

  ->then(function ($t) { return $t; });

($veryLongVeryLongVeryLong ||
 $anotherVeryLongVeryLongVeryLong ||
 $veryVeryVeryLongError
)

  ->map(function ($tickets) { $TicketRecord->createFromSomeLongString(); })

  ->filter(function ($obj) { return !!$obj; });

$sel = $this->connections

  ->concat($this->activities->concat($this->operators))
  ->filter(function ($x) { return $x->selected; });
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

// App configuration.
$fooBar
    ->doSomething('Hello World')
    ->doAnotherThing('Foo', ['foo' => $bar])

    ->doOneMoreThing($config)

    ->run(function () {
        $console->log('Bar');
    });

// Hello world
// App configuration.
$bigDeal

    ->doSomething('Hello World')

    ->doAnotherThing('Foo', ['foo' => $bar])

    ->doOneMoreThing($config)

    ->run(function () {
        $console->log('Bar');
    });

// Hello world
$foo->bar->baz

    ->doSomething('Hello World')

    ->foo->bar->doAnotherThing('Foo', ['foo' => $bar])

    ->doOneMoreThing($config)
    ->bar->run(function () {
        $console->log('Bar');
    });

// Hello world
// Run this
($somethingGood ? $thisIsIt : $maybeNot)

    ->doSomething('Hello World')

    ->doAnotherThing('Foo', ['foo' => $bar])
    ->run(function () {
        $console->log('Bar');
    }); // Do this

$helloWorld

    ->text()

    ->then(function ($t) {
        return $t;
    });

(
    $veryLongVeryLongVeryLong ||
    $anotherVeryLongVeryLongVeryLong ||
    $veryVeryVeryLongError
)

    ->map(function ($tickets) {
        $TicketRecord->createFromSomeLongString();
    })

    ->filter(function ($obj) {
        return !!$obj;
    });

$sel = $this->connections

    ->concat($this->activities->concat($this->operators))
    ->filter(function ($x) {
        return $x->selected;
    });

`;
