// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`offsets.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

// identifier
$obj->var;
// variable
$obj->$var;
// variable variable
$obj->$$var;
// literal with identifier
$obj->{foo};
// literal with variable
$obj->{$var};
// literal with call
$obj->{call()};
// encapsed (offset type)
$obj->foo_{'test' . 'bar'};
// variable with literal with call
// TODO https://github.com/glayzzle/php-parser/issues/254
// $obj->\${call()};

=====================================output=====================================
<?php

// identifier
$obj->var;
// variable
$obj->$var;
// variable variable
$obj->$$var;
// literal with identifier
$obj->{foo};
// literal with variable
$obj->{$var};
// literal with call
$obj->{call()};
// encapsed (offset type)
$obj->foo_["test" . "bar"];
// variable with literal with call
// TODO https://github.com/glayzzle/php-parser/issues/254
// $obj->\${call()};

================================================================================
`;

exports[`propertylookup.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

$a = $obj->value;
$a = &$obj->getValue();
$a = &$obj->getValue()->getValue()->getValue()->getValue()->getValue()->getValue()->getValue()->getValue()->getValue();
$var = &$var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
$obj->value = 2;

$b = $this->foo;
$b = $this->{foo};
$b = $this->{foo['bar']};
$b = $this->{'foo' . $bar};
$b = $this->{self::STUFF};
$object = $this->{'bar' . $foo}->buzz();

$this->loooooooooooongloooooooooooongloooooooooooonglookup = "teeeeeeeeeeeeeeeeeeeeest";
$this->loooooooooooong->loooooooooooong->loooooooooooong->lookup = "teeeeeeeeeeest";
$this->loooooooooooong->loooooooooooong->loooooooooooong->lookup = $other->looooooooooong->stuff;
$this->loooooooooooong->lookup = (int) $this->getRequest()->getParam(
  'instance-resource-id'
);

$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty;
$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty();

$var = $var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
$var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa = $var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

=====================================output=====================================
<?php

$a = $obj->value;
$a = &$obj->getValue();
$a = &$obj
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue()
    ->getValue();
$var =
    &$var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
$obj->value = 2;

$b = $this->foo;
$b = $this->{foo};
$b = $this->{foo["bar"]};
$b = $this->{"foo" . $bar};
$b = $this->{self::STUFF};
$object = $this->{"bar" . $foo}->buzz();

$this->loooooooooooongloooooooooooongloooooooooooonglookup =
    "teeeeeeeeeeeeeeeeeeeeest";
$this->loooooooooooong->loooooooooooong->loooooooooooong->lookup =
    "teeeeeeeeeeest";
$this->loooooooooooong->loooooooooooong->loooooooooooong->lookup =
    $other->looooooooooong->stuff;
$this->loooooooooooong->lookup = (int) $this->getRequest()->getParam(
    "instance-resource-id"
);

$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty;
$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty();

$var =
    $var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
$var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa =
    $var->aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

================================================================================
`;

exports[`single.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty;

=====================================output=====================================
<?php
$obj->veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongProperty;

================================================================================
`;
