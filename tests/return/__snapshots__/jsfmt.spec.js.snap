// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`return.php 1`] = `
<?php

function sum($a, $b) {
    return ($a + $b);
}

return;
return $name;
return

$name;
return

$VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongClassName;
return [1, 2, 3];
return [$veryVeryVeryVeryVeryVeryLongKey => 'VeryVeryVeryVeryVeryVeryVeryVeryVeryLongString', $veryVeryVeryVeryVeryVeryLongKey => 'VeryVeryVeryVeryVeryVeryVeryVeryVeryLongString', 3];
return ($a + $b);
return ( $a / $b );
return ( $a && $b );
return new $VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongClassName();
return "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" . "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString";
return "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" . "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" . "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString";
return 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000;
return (1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000 + 1000000000);
return $veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongVariable ? true : false;
return $veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongVariable->veryVeryVeryVeryVeryVeryLongProperty;
return ((($true ? ('foo' . ('foo'. 'bar')) : "foobarfoo")));
return 'string' . 'string' . 'string' . 'string' . 'string' . 'string' . 'string' . 'string';
return ('string' . 'string' . 'string' . 'string' . 'string' . 'string' . 'string' . 'string');

return function () {};
return (function () {})();

return call();
return $a->b->c->d->e->f;
return $a->b()->c()->d()->e()->f();
return call()->b()->c()->d()->e()->f();
return $a::b()::c()::d()::e()::f();
return Foo::a()::b()::c()::d()::e()::f();

return "
string
string
string
";

return $str = <<<EOD
Example of string
spanning multiple lines
using heredoc syntax.
EOD;

return $str = <<<'EOD'
Example of string
spanning multiple lines
using nowdoc syntax.
EOD;

return new class {};
return new class {
    public function foo() {
        return 1;
    }
};

return null;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

function sum($a, $b)
{
    return $a + $b;
}

return;
return $name;
return $name;
return $VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongClassName;
return [1, 2, 3];
return [
    $veryVeryVeryVeryVeryVeryLongKey =>
        'VeryVeryVeryVeryVeryVeryVeryVeryVeryLongString',
    $veryVeryVeryVeryVeryVeryLongKey =>
        'VeryVeryVeryVeryVeryVeryVeryVeryVeryLongString',
    3
];
return $a + $b;
return $a / $b;
return $a && $b;
return new $VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongClassName();
return "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" .
    "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString";
return "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" .
    "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString" .
    "VeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString";
return 1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000;
return 1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000 +
    1000000000;
return $veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongVariable
    ? true
    : false;
return $veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongVariable->veryVeryVeryVeryVeryVeryLongProperty;
return $true ? 'foo' . ('foo' . 'bar') : "foobarfoo";
return 'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string';
return 'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string' .
    'string';

return function () {};
return (function () {})();

return call();
return $a->b->c->d->e->f;
return $a
    ->b()
    ->c()
    ->d()
    ->e()
    ->f();
return call()
    ->b()
    ->c()
    ->d()
    ->e()
    ->f();
return $a
    ::b()
    ::c()
    ::d()
    ::e()
    ::f();
return Foo::a()
    ::b()
    ::c()
    ::d()
    ::e()
    ::f();

return "
string
string
string
";

return $str = <<<EOD
Example of string
spanning multiple lines
using heredoc syntax.
EOD;

return $str = <<<'EOD'
Example of string
spanning multiple lines
using nowdoc syntax.
EOD;

return new class {};
return new class {
    public function foo()
    {
        return 1;
    }
};

return null;

`;
