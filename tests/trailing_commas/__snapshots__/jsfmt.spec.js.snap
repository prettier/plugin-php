// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array.php - php-verify: array.php 1`] = `
<?php

$foo = ['foo', 'bar'];
$foo = ['foo', 'bar',];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2'];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2',];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',];
$foo = array('foo', 'bar');
$foo = array('foo', 'bar',);
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2');
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2',);
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar');
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',);
$packages = array_merge(
    idx($composer, 'require', []),
    idx($composer, 'require-dev', [])
);

// nowdoc
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
,
    'bar',
);

// heredoc
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
,
    'bar',
);

// Associative array with nowdoc
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
    'bar',
);

// Associative array with heredoc
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
,
    'bar',
);

// Nested with nowdoc
$expected = array(
    'test' => <<<'EOT'
foo
# bar
baz

EOT
,
    'collection' => array(
        array(
            'one' => <<<'EOT'
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<'EOT'
foo
# bar
baz
EOT
        )
    )
);

// Nested with heredoc
$expected = array(
    'test' => <<<EOT
foo
# bar
baz

EOT
,
    'collection' => array(
        array(
            'one' => <<<EOT
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<EOT
foo
# bar
baz
EOT
        )
    )
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

$foo = ['foo', 'bar'];
$foo = ['foo', 'bar'];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2'
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2'
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'
];
$foo = array('foo', 'bar');
$foo = array('foo', 'bar');
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2'
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2'
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'
);
$packages = array_merge(
    idx($composer, 'require', []),
    idx($composer, 'require-dev', [])
);

// nowdoc
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
);
$expected = array(
    'foo',
    <<<'EOT'
foo
# bar
baz

EOT
);
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
    ,
    'bar'
);

// heredoc
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
);
$expected = array(
    'foo',
    <<<EOT
foo
# bar
baz

EOT
);
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
    ,
    'bar'
);

// Associative array with nowdoc
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
);
$expected = array(
    'foo',
    'key' => <<<'EOT'
foo
# bar
baz

EOT
);
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
    ,
    'bar'
);

// Associative array with heredoc
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
);
$expected = array(
    'foo',
    'key' => <<<EOT
foo
# bar
baz

EOT
);
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
    ,
    'bar'
);

// Nested with nowdoc
$expected = array(
    'test' => <<<'EOT'
foo
# bar
baz

EOT
    ,
    'collection' => array(
        array(
            'one' => <<<'EOT'
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<'EOT'
foo
# bar
baz
EOT
        )
    )
);

// Nested with heredoc
$expected = array(
    'test' => <<<EOT
foo
# bar
baz

EOT
    ,
    'collection' => array(
        array(
            'one' => <<<EOT
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<EOT
foo
# bar
baz
EOT
        )
    )
);

`;

exports[`array.php - php-verify: array.php 2`] = `
<?php

$foo = ['foo', 'bar'];
$foo = ['foo', 'bar',];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2'];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2',];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar'];
$foo = ['very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',];
$foo = array('foo', 'bar');
$foo = array('foo', 'bar',);
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2');
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1', 'very-very-very-very-very-very-very-very-very-long-item-2',);
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar');
$foo = array('very-very-very-very-very-very-very-very-very-long-item-1' => 'foo', 'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',);
$packages = array_merge(
    idx($composer, 'require', []),
    idx($composer, 'require-dev', [])
);

// nowdoc
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
,
    'bar',
);

// heredoc
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
,
    'bar',
);

// Associative array with nowdoc
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
    'bar',
);

// Associative array with heredoc
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
,
    'bar',
);

// Nested with nowdoc
$expected = array(
    'test' => <<<'EOT'
foo
# bar
baz

EOT
,
    'collection' => array(
        array(
            'one' => <<<'EOT'
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<'EOT'
foo
# bar
baz
EOT
        )
    )
);

// Nested with heredoc
$expected = array(
    'test' => <<<EOT
foo
# bar
baz

EOT
,
    'collection' => array(
        array(
            'one' => <<<EOT
foo
# bar
baz

EOT
        ),
        array(
            'two' => <<<EOT
foo
# bar
baz
EOT
        )
    )
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

$foo = ['foo', 'bar'];
$foo = ['foo', 'bar'];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2',
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2',
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',
];
$foo = [
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',
];
$foo = array('foo', 'bar');
$foo = array('foo', 'bar');
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2',
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1',
    'very-very-very-very-very-very-very-very-very-long-item-2',
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',
);
$foo = array(
    'very-very-very-very-very-very-very-very-very-long-item-1' => 'foo',
    'very-very-very-very-very-very-very-very-very-long-item-2' => 'bar',
);
$packages = array_merge(
    idx($composer, 'require', []),
    idx($composer, 'require-dev', [])
);

// nowdoc
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<'EOT'
foo
# bar
baz

EOT
    ,
    'bar',
);

// heredoc
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    <<<EOT
foo
# bar
baz

EOT
    ,
    'bar',
);

// Associative array with nowdoc
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<'EOT'
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<'EOT'
foo
# bar
baz

EOT
    ,
    'bar',
);

// Associative array with heredoc
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'foo',
    'key' => <<<EOT
foo
# bar
baz

EOT
,
);
$expected = array(
    'key' => <<<EOT
foo
# bar
baz

EOT
    ,
    'bar',
);

// Nested with nowdoc
$expected = array(
    'test' => <<<'EOT'
foo
# bar
baz

EOT
    ,
    'collection' => array(
        array(
            'one' => <<<'EOT'
foo
# bar
baz

EOT
        ,
        ),
        array(
            'two' => <<<'EOT'
foo
# bar
baz
EOT
        ,
        ),
    ),
);

// Nested with heredoc
$expected = array(
    'test' => <<<EOT
foo
# bar
baz

EOT
    ,
    'collection' => array(
        array(
            'one' => <<<EOT
foo
# bar
baz

EOT
        ,
        ),
        array(
            'two' => <<<EOT
foo
# bar
baz
EOT
        ,
        ),
    ),
);

`;

exports[`list.php - php-verify: list.php 1`] = `
<?php

list($first, $second, $three, $fourth) = $arr;
list(,$first, $second, $three, $fourth,) = $arr;
list(,,$first, $second, $three, $fourth,,) = $arr;
list(,,$first,, $second,, $three,, $fourth,,) = $arr;
list(,,,$first, $second, $three, $fourth,,,) = $arr;
list(,,,$first,,, $second,,, $three,,, $fourth,,,) = $arr;

list(0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong) = $arr;
list(,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,) = $arr;
list(,,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,,) = $arr;
list(,,0 => $firstVeryVeryVeryVeryLong,, 1 => $secondVeryVeryVeryVeryLong,, 2 => $threeVeryVeryVeryVeryLong,, 3 => $fourthVeryVeryVeryVeryLong,,) = $arr;
list(,,,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,,,) = $arr;
list(,,,0 => $firstVeryVeryVeryVeryLong,,, 1 => $secondVeryVeryVeryVeryLong,,, 2 => $threeVeryVeryVeryVeryLong,,, 3 => $fourthVeryVeryVeryVeryLong,,,) = $arr;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

list($first, $second, $three, $fourth) = $arr;
list(, $first, $second, $three, $fourth) = $arr;
list(, , $first, $second, $three, $fourth, ,) = $arr;
list(, , $first, , $second, , $three, , $fourth, ,) = $arr;
list(, , , $first, $second, $three, $fourth, , ,) = $arr;
list(, , , $first, , , $second, , , $three, , , $fourth, , ,) = $arr;

list(
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong
) = $arr;
list(
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong
) = $arr;
list(
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
) = $arr;
list(
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    ,
    1 => $secondVeryVeryVeryVeryLong,
    ,
    2 => $threeVeryVeryVeryVeryLong,
    ,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
) = $arr;
list(
    ,
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
    ,
) = $arr;
list(
    ,
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    ,
    ,
    1 => $secondVeryVeryVeryVeryLong,
    ,
    ,
    2 => $threeVeryVeryVeryVeryLong,
    ,
    ,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
    ,
) = $arr;

`;

exports[`list.php - php-verify: list.php 2`] = `
<?php

list($first, $second, $three, $fourth) = $arr;
list(,$first, $second, $three, $fourth,) = $arr;
list(,,$first, $second, $three, $fourth,,) = $arr;
list(,,$first,, $second,, $three,, $fourth,,) = $arr;
list(,,,$first, $second, $three, $fourth,,,) = $arr;
list(,,,$first,,, $second,,, $three,,, $fourth,,,) = $arr;

list(0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong) = $arr;
list(,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,) = $arr;
list(,,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,,) = $arr;
list(,,0 => $firstVeryVeryVeryVeryLong,, 1 => $secondVeryVeryVeryVeryLong,, 2 => $threeVeryVeryVeryVeryLong,, 3 => $fourthVeryVeryVeryVeryLong,,) = $arr;
list(,,,0 => $firstVeryVeryVeryVeryLong, 1 => $secondVeryVeryVeryVeryLong, 2 => $threeVeryVeryVeryVeryLong, 3 => $fourthVeryVeryVeryVeryLong,,,) = $arr;
list(,,,0 => $firstVeryVeryVeryVeryLong,,, 1 => $secondVeryVeryVeryVeryLong,,, 2 => $threeVeryVeryVeryVeryLong,,, 3 => $fourthVeryVeryVeryVeryLong,,,) = $arr;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

list($first, $second, $three, $fourth) = $arr;
list(, $first, $second, $three, $fourth) = $arr;
list(, , $first, $second, $three, $fourth, ,) = $arr;
list(, , $first, , $second, , $three, , $fourth, ,) = $arr;
list(, , , $first, $second, $three, $fourth, , ,) = $arr;
list(, , , $first, , , $second, , , $three, , , $fourth, , ,) = $arr;

list(
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
) = $arr;
list(
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
) = $arr;
list(
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
) = $arr;
list(
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    ,
    1 => $secondVeryVeryVeryVeryLong,
    ,
    2 => $threeVeryVeryVeryVeryLong,
    ,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
) = $arr;
list(
    ,
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    1 => $secondVeryVeryVeryVeryLong,
    2 => $threeVeryVeryVeryVeryLong,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
    ,
) = $arr;
list(
    ,
    ,
    ,
    0 => $firstVeryVeryVeryVeryLong,
    ,
    ,
    1 => $secondVeryVeryVeryVeryLong,
    ,
    ,
    2 => $threeVeryVeryVeryVeryLong,
    ,
    ,
    3 => $fourthVeryVeryVeryVeryLong,
    ,
    ,
) = $arr;

`;

exports[`use.php - php-verify: use.php 1`] = `
<?php

use foo\\bar\\{ClassA, ClassB, ClassC,};
use function foo\\bar\\{fn_a, fn_b, fn_c,};
use const foo\\bar\\{ConstA, ConstB, ConstC,};
use other_foo\\bar\\{ClassA, ClassB, ClassC as C,};

use foo\\bar\\{VeryVeryVeryVeryVeryLongClassA, VeryVeryVeryVeryVeryLongClassB, VeryVeryVeryVeryVeryLongClassC,};
use function foo\\bar\\{very_very_very_very_very_long_fn_a, very_very_very_very_very_long_fn_b, very_very_very_very_very_long_fn_c,};
use const foo\\bar\\{VeryVeryVeryVeryVeryLongConstA, VeryVeryVeryVeryVeryLongConstB, VeryVeryVeryVeryVeryLongConstC,};
use other_foo\\bar\\{VeryVeryVeryVeryVeryLongClassA, VeryVeryVeryVeryVeryLongClassB, VeryVeryVeryVeryVeryLongClassC as C,};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

use foo\\bar\\{ClassA, ClassB, ClassC};
use function foo\\bar\\{fn_a, fn_b, fn_c};
use const foo\\bar\\{ConstA, ConstB, ConstC};
use other_foo\\bar\\{ClassA, ClassB, ClassC as C};

use foo\\bar\\{
    VeryVeryVeryVeryVeryLongClassA,
    VeryVeryVeryVeryVeryLongClassB,
    VeryVeryVeryVeryVeryLongClassC
};
use function foo\\bar\\{
    very_very_very_very_very_long_fn_a,
    very_very_very_very_very_long_fn_b,
    very_very_very_very_very_long_fn_c
};
use const foo\\bar\\{
    VeryVeryVeryVeryVeryLongConstA,
    VeryVeryVeryVeryVeryLongConstB,
    VeryVeryVeryVeryVeryLongConstC
};
use other_foo\\bar\\{
    VeryVeryVeryVeryVeryLongClassA,
    VeryVeryVeryVeryVeryLongClassB,
    VeryVeryVeryVeryVeryLongClassC as C
};

`;

exports[`use.php - php-verify: use.php 2`] = `
<?php

use foo\\bar\\{ClassA, ClassB, ClassC,};
use function foo\\bar\\{fn_a, fn_b, fn_c,};
use const foo\\bar\\{ConstA, ConstB, ConstC,};
use other_foo\\bar\\{ClassA, ClassB, ClassC as C,};

use foo\\bar\\{VeryVeryVeryVeryVeryLongClassA, VeryVeryVeryVeryVeryLongClassB, VeryVeryVeryVeryVeryLongClassC,};
use function foo\\bar\\{very_very_very_very_very_long_fn_a, very_very_very_very_very_long_fn_b, very_very_very_very_very_long_fn_c,};
use const foo\\bar\\{VeryVeryVeryVeryVeryLongConstA, VeryVeryVeryVeryVeryLongConstB, VeryVeryVeryVeryVeryLongConstC,};
use other_foo\\bar\\{VeryVeryVeryVeryVeryLongClassA, VeryVeryVeryVeryVeryLongClassB, VeryVeryVeryVeryVeryLongClassC as C,};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php

use foo\\bar\\{ClassA, ClassB, ClassC};
use function foo\\bar\\{fn_a, fn_b, fn_c};
use const foo\\bar\\{ConstA, ConstB, ConstC};
use other_foo\\bar\\{ClassA, ClassB, ClassC as C};

use foo\\bar\\{
    VeryVeryVeryVeryVeryLongClassA,
    VeryVeryVeryVeryVeryLongClassB,
    VeryVeryVeryVeryVeryLongClassC,
};
use function foo\\bar\\{
    very_very_very_very_very_long_fn_a,
    very_very_very_very_very_long_fn_b,
    very_very_very_very_very_long_fn_c,
};
use const foo\\bar\\{
    VeryVeryVeryVeryVeryLongConstA,
    VeryVeryVeryVeryVeryLongConstB,
    VeryVeryVeryVeryVeryLongConstC,
};
use other_foo\\bar\\{
    VeryVeryVeryVeryVeryLongClassA,
    VeryVeryVeryVeryVeryLongClassB,
    VeryVeryVeryVeryVeryLongClassC as C,
};

`;
