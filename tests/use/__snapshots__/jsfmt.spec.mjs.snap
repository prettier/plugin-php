// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`use.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php
namespace foo;

use My\\Full\\Classname as Another;
use MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\Classname as Another;
use function some\\Full\\fn_a;
use function My\\Full\\functionName as func;
use const My\\Full\\CONSTANT;
use My\\Full\\Classname as Another, My\\Full\\NSname;
use MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\Classname as Another, MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\NSname;
use some\\Full\\{ClassA, ClassB, ClassC as C};
use function some\\Full\\{fn_a, fn_b, fn_c};
use const some\\Full\\{ConstA, ConstB, ConstC};
use Vendor\\Package\\SomeNamespace\\{
    SubnamespaceOne\\ClassA,
    SubnamespaceOne\\ClassB,
    SubnamespaceTwo\\ClassY,
    ClassZ
};
use Mizo\\Web\\{
    Php\\WebSite,
    Php\\KeyWord,
    Php\\UnicodePrint,
    JS\\JavaScript,
    function JS\\printTotal,
    function JS\\printList,
    const JS\\BUAIKUM,
    const JS\\MAUTAM
};
use \\Illuminate\\Foundation\\Bootstrap\\BootProviders;
use function \\some\\Full\\fn_a;
use const \\My\\Full\\CONSTANT;
use \\Vendor\\Package\\SomeNamespace\\{
    SubnamespaceOne\\ClassA
};
use Exception;
use \\Exception;
use \\Exception\\My;
use \\Carbon\\Carbon, \\App, \\Response, \\Input, \\Auth, \\URL;
=====================================output=====================================
<?php
namespace foo;

use My\\Full\\Classname as Another;
use MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\Classname as Another;
use function some\\Full\\fn_a;
use function My\\Full\\functionName as func;
use const My\\Full\\CONSTANT;
use My\\Full\\Classname as Another, My\\Full\\NSname;
use MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\Classname as Another,
    MyVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeyLongNamespace\\Full\\NSname;
use some\\Full\\{ClassA, ClassB, ClassC as C};
use function some\\Full\\{fn_a, fn_b, fn_c};
use const some\\Full\\{ConstA, ConstB, ConstC};
use Vendor\\Package\\SomeNamespace\\{
    SubnamespaceOne\\ClassA,
    SubnamespaceOne\\ClassB,
    SubnamespaceTwo\\ClassY,
    ClassZ
};
use Mizo\\Web\\{
    Php\\WebSite,
    Php\\KeyWord,
    Php\\UnicodePrint,
    JS\\JavaScript,
    function JS\\printTotal,
    function JS\\printList,
    const JS\\BUAIKUM,
    const JS\\MAUTAM
};
use Illuminate\\Foundation\\Bootstrap\\BootProviders;
use function some\\Full\\fn_a;
use const My\\Full\\CONSTANT;
use Vendor\\Package\\SomeNamespace\\{SubnamespaceOne\\ClassA};
use Exception;
use \\Exception;
use Exception\\My;
use Carbon\\Carbon, \\App, \\Response, \\Input, \\Auth, \\URL;

================================================================================
`;

exports[`without-namespace.php 1`] = `
====================================options=====================================
parsers: ["php"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<?php

use NamespaceA\\ClassA;
use NamespaceA\\ClassB;
use NamespaceA\\ClassC;
use NamespaceB\\ClassC,
    NamespaceB\\ClassB,
    NamespaceB\\ClassC;

=====================================output=====================================
<?php

use NamespaceA\\ClassA;
use NamespaceA\\ClassB;
use NamespaceA\\ClassC;
use NamespaceB\\ClassC, NamespaceB\\ClassB, NamespaceB\\ClassC;

================================================================================
`;
